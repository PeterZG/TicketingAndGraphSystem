
# 票务和图形系统

该项目展示了一个多功能的票务系统和图形遍历工具，使用Java实现。设计中融合了先进的面向对象原则和实际的软件工程技术，使其成为一个全面的票务操作和基于图的数据结构解决方案。

## 功能

1. **票务系统**：
   - 一个基于面向对象原则的强大票务平台。
   - 包括管理用户、票务购买和生成详细收据的功能。

2. **图形迭代器**：
   - 实现了图形结构的广度优先和深度优先遍历算法。
   - 支持通用的图形数据结构，使其可扩展到各种应用。

3. **园艺模块**：
   - 提供一个受感恩启发的园艺模拟，供创意探索。

4. **线程安全**：
   - 演示了异步编程概念，确保线程安全操作。

## 技术栈

- **编程语言**：Java
- **测试框架**：JUnit
- **设计模式**：
  - 装饰者模式（用于灵活的功能增强）。
  - 迭代器模式（用于图形遍历算法）。
  - 面向对象设计原则。

## 文件结构

```
src/
├── main/
│   ├── java/
│   │   ├── gardening/           # 园艺模块
│   │   ├── graph/               # 图遍历器与图结构
│   │   ├── ticketingsystem/     # 票务系统核心逻辑
│   │   ├── unsw/                # 工具和共享模块
├── test/
│   ├── java/
│   │   ├── gardening/           # 园艺模块测试
│   │   ├── graph/               # 图遍历与数据结构测试
│   │   ├── ticketingsystem/     # 票务系统功能测试
```

## 使用方法

### 编译
使用Gradle编译项目：
```bash
./gradlew build
```

### 运行系统
通过主类运行各个模块：
```bash
# 运行票务系统
java -cp build/classes/java/main ticketingsystem.Application

# 运行图形模块
java -cp build/classes/java/main graph.Graph
```

### 测试
执行完整的测试套件：
```bash
./gradlew test
```

## 示例输出

1. **票务系统**:
   - 用户可以购买票务，系统会生成详细且易于理解的收据。

2. **图形迭代器**:
   - 可以使用广度优先或深度优先策略遍历图形。

## 未来增强

1. **扩展票务功能**：
   - 引入支付网关集成。
   - 支持多种票务类型和批量购买功能。

2. **图形增强**：
   - 添加加权图支持，并实现最短路径算法。

3. **用户界面**：
   - 构建图形化或基于Web的用户界面，提供更具互动性的用户体验。


## 致谢

该项目展示了先进的编程技能，旨在实现现实世界的适应性。
